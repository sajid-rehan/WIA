
Eine mögliche Implementierung einer React-Komponente für ein Login-Formular könnte wie folgt aussehen:
```
import React, { useState } from 'react';

function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  function handleSubmit(e) {
    e.preventDefault();
    console.log(`Email: ${email}, Password: ${password}`);
  }

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Email:
        <input type="email" value={email} onChange={e => setEmail(e.target.value)} />
      </label>
      <br />
      <label>
        Password:
        <input type="password" value={password} onChange={e => setPassword(e.target.value)} />
      </label>
      <br />
      <button type="submit">Login</button>
    </form>
  );
}
```
Diese Komponente nutzt den `useState`-Hook von React, um die E-Mail-Adresse und das Passwort in verschiedenen Zuständen zu speichern. Wenn der Benutzer auf die Schaltfläche "Login" klickt, wird die Funktion `handleSubmit` ausgeführt, in der die E-Mail-Adresse und das Passwort in der Konsole ausgegeben werden.

Es ist auch möglich, den State direkt im Formular zu speichern, indem man die Werte des Input-Feldes mit dem State verknüpft. Hier ein Beispiel:
```
import React from 'react';

function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  function handleSubmit(e) {
    e.preventDefault();
    console.log(`Email: ${email}, Password: ${password}`);
  }

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Email:
        <input type="email" value={email} onChange={e => setEmail(e.target.value)} />
      </label>
      <br />
      <label>
        Password:
        <input type="password" value={password} onChange={e => setPassword(e.target.value)} />
      </label>
      <br />
      <button type="submit">Login</button>
    </form>
  );
}
```
In diesem Beispiel werden die Werte des Input-Feldes direkt mit den States verknüpft, sodass sie sich automatisch ändern, wenn der Benutzer die Felder ändert.

